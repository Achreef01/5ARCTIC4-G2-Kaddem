pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS=credentials('dockerhub')
        MYSQL_CREDENTIALS = credentials('mysql')
    }

    stages {
        stage('Git') {
            steps {
                git branch: 'TakwaSAKOUHI-5ARCTIC4-G2',
                url: 'https://github.com/Achreef01/5ARCTIC4-G2-Kaddem.git'
            }
        }

        stage('MVN CLEAN') {
            steps {
                dir('kaddem') {
                    sh 'mvn clean'
                }
            }
        }

        stage('MVN COMPILE') {
            steps {
                dir('kaddem') {
                    sh 'mvn compile'
                }
            }
        }

    /*    stage('MVN TEST') {
            steps {
                dir('kaddem') {
                    sh 'mvn clean test'
                }
            }
        }
*/
        stage('MVN BUILD') {
            steps {
                dir('kaddem') {
                    sh 'mvn install -DskipTests=true'
                }
            }
        }

        stage('JaCoCo') {
            steps {
                dir('kaddem') {
                    step([$class: 'JacocoPublisher',
                        execPattern: '**/target/*.exec',               // Use wildcard for exec files
                        classPattern: '**/classes',                    // Use wildcard for classes
                        sourcePattern: '**/src',                       // Use wildcard for source files
                        exclusionPattern: '**/target/**,**/*Test,**/_javassist/**'  // Wildcards in exclusion pattern
                    ])
                }
            }
        }

        stage('Sonarqube analysis') {
            steps {
                dir('kaddem') {
                    withSonarQubeEnv('sonarqube'){
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                dir('kaddem') {
                    sh 'mvn deploy'
                }
            }
        }
/*
        stage('Build backend docker image') {
            steps {
                dir('kaddem') {
                    sh 'docker build -t takwa2/kaddem-backend:latest .'
                }
            }
        }

        stage('Build frontend docker image') {
            steps {
                dir('kaddemfront') {
                    sh 'docker build -t takwa2/kaddem-frontend:latest .'
                }
            }
        }

        stage('Login') {
            steps {
                dir('kaddem') {
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                }
            }
        }

        stage('Push backend docker image') {
            steps {
                dir('kaddem') {
                    sh 'docker push takwa2/kaddem-backend:latest'
                }
            }
        }

        stage('Push frontend docker image') {
            steps {
                dir('kaddemfront') {
                    sh 'docker push takwa2/kaddem-frontend:latest'
                }
            }
        }

        stage("Docker Compose ") {
            steps {
                dir('kaddem') {
                    withEnv(["MYSQL_ROOT_PASSWORD=${MYSQL_CREDENTIALS_PSW}", "BUILD_NUMBER=${env.BUILD_NUMBER}"]) {
                        sh 'docker stop mysql_db || true && docker rm mysql_db || true'
                        sh 'docker-compose down'
                        sh 'docker-compose up -d'
                    }
                }
            }
        }
*/
    }
}